/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "MulticallUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MulticallUpgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Pausable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC20Governance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Governance__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERCMintBurnClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERCMintBurnClaim__factory>;
    getContractFactory(
      name: "ContractAddrCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractAddrCalculator__factory>;
    getContractFactory(
      name: "ERC1155MinterSupply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MinterSupply__factory>;
    getContractFactory(
      name: "ERC20FixedSupply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20FixedSupply__factory>;
    getContractFactory(
      name: "ERC20FixedSupplyMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20FixedSupplyMintable__factory>;
    getContractFactory(
      name: "ERC721Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Claimable__factory>;
    getContractFactory(
      name: "ERC721MinterPauserAutoId",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MinterPauserAutoId__factory>;
    getContractFactory(
      name: "ERC1155MinterSupplyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MinterSupplyTest__factory>;
    getContractFactory(
      name: "ERC20FixedSupplyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20FixedSupplyTest__factory>;
    getContractFactory(
      name: "ERC721MinterPauserAutoIdTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MinterPauserAutoIdTest__factory>;
    getContractFactory(
      name: "IERCMintBurnClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERCMintBurnClaim__factory>;
    getContractFactory(
      name: "IERCMintBurnClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERCMintBurnClaim__factory>;
    getContractFactory(
      name: "ClusterArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterArea__factory>;
    getContractFactory(
      name: "ClusterAttributeArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterAttributeArea__factory>;
    getContractFactory(
      name: "ClusterAttributeAreaToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterAttributeAreaToken__factory>;
    getContractFactory(
      name: "ClusterFormulaArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterFormulaArea__factory>;
    getContractFactory(
      name: "ClusterHandlerArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterHandlerArea__factory>;
    getContractFactory(
      name: "ClusterMountingArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterMountingArea__factory>;
    getContractFactory(
      name: "ClusterRuleArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterRuleArea__factory>;
    getContractFactory(
      name: "ClusterRuleAreaHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClusterRuleAreaHandler__factory>;
    getContractFactory(
      name: "Engine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Engine__factory>;
    getContractFactory(
      name: "EngineUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EngineUtil__factory>;
    getContractFactory(
      name: "EngineView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EngineView__factory>;
    getContractFactory(
      name: "AreaHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AreaHandler__factory>;
    getContractFactory(
      name: "IClusterArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterArea__factory>;
    getContractFactory(
      name: "IClusterAttributeArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterAttributeArea__factory>;
    getContractFactory(
      name: "IClusterAttributeAreaToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterAttributeAreaToken__factory>;
    getContractFactory(
      name: "IClusterFormulaArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterFormulaArea__factory>;
    getContractFactory(
      name: "IClusterHandlerArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterHandlerArea__factory>;
    getContractFactory(
      name: "IClusterMountingArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterMountingArea__factory>;
    getContractFactory(
      name: "IClusterRuleArea",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterRuleArea__factory>;
    getContractFactory(
      name: "IClusterRuleAreaHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClusterRuleAreaHandler__factory>;
    getContractFactory(
      name: "IEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEngine__factory>;
    getContractFactory(
      name: "IEngineView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEngineView__factory>;
    getContractFactory(
      name: "IERCMintBurnClaimRole",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERCMintBurnClaimRole__factory>;
    getContractFactory(
      name: "IExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExchange__factory>;
    getContractFactory(
      name: "IHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHandler__factory>;
    getContractFactory(
      name: "IHandlerSync",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHandlerSync__factory>;
    getContractFactory(
      name: "IPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolToken__factory>;
    getContractFactory(
      name: "ISnippet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISnippet__factory>;
    getContractFactory(
      name: "IStateCounter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateCounter__factory>;
    getContractFactory(
      name: "IVersion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVersion__factory>;
    getContractFactory(
      name: "ProofLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProofLib__factory>;
    getContractFactory(
      name: "PoolContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolContract__factory>;
    getContractFactory(
      name: "PoolFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolFee__factory>;
    getContractFactory(
      name: "PoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolToken__factory>;
    getContractFactory(
      name: "PoolTokenAllocation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolTokenAllocation__factory>;
    getContractFactory(
      name: "ProxyIntake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyIntake__factory>;
    getContractFactory(
      name: "ProxyIntakeAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyIntakeAdmin__factory>;
    getContractFactory(
      name: "RandomHash",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RandomHash__factory>;
    getContractFactory(
      name: "RandomGenerator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RandomGenerator__factory>;
    getContractFactory(
      name: "DecodeHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecodeHelper__factory>;
    getContractFactory(
      name: "EncodeHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EncodeHelper__factory>;
    getContractFactory(
      name: "Snippet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Snippet__factory>;
    getContractFactory(
      name: "StateCounter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StateCounter__factory>;
    getContractFactory(
      name: "ISwapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapV2Factory__factory>;
    getContractFactory(
      name: "ISwapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapV2Pair__factory>;
    getContractFactory(
      name: "ISwapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapV2Router01__factory>;
    getContractFactory(
      name: "ERC1155MinterSupplyCap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MinterSupplyCap__factory>;
    getContractFactory(
      name: "ERC20FixedSupplyCap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20FixedSupplyCap__factory>;
    getContractFactory(
      name: "ERC721MinterPauserAutoIdCap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MinterPauserAutoIdCap__factory>;
    getContractFactory(
      name: "ArbSys",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbSys__factory>;
    getContractFactory(
      name: "Formula",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Formula__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "PausableChannelUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableChannelUpgradeable__factory>;
    getContractFactory(
      name: "TokenHandlerUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenHandlerUtil__factory>;
    getContractFactory(
      name: "Transfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transfer__factory>;
    getContractFactory(
      name: "TransferAssembly",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferAssembly__factory>;
    getContractFactory(
      name: "TransferAssemblyErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferAssemblyErrors__factory>;

    getContractAt(
      name: "AccessControlEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "MulticallUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MulticallUpgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Supply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Burnable>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Pausable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC20Governance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Governance>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERCMintBurnClaim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERCMintBurnClaim>;
    getContractAt(
      name: "ContractAddrCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractAddrCalculator>;
    getContractAt(
      name: "ERC1155MinterSupply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MinterSupply>;
    getContractAt(
      name: "ERC20FixedSupply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20FixedSupply>;
    getContractAt(
      name: "ERC20FixedSupplyMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20FixedSupplyMintable>;
    getContractAt(
      name: "ERC721Claimable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Claimable>;
    getContractAt(
      name: "ERC721MinterPauserAutoId",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MinterPauserAutoId>;
    getContractAt(
      name: "ERC1155MinterSupplyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MinterSupplyTest>;
    getContractAt(
      name: "ERC20FixedSupplyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20FixedSupplyTest>;
    getContractAt(
      name: "ERC721MinterPauserAutoIdTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MinterPauserAutoIdTest>;

    getContractAt(
      name: "IERCMintBurnClaim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERCMintBurnClaim>;
    getContractAt(
      name: "IERCMintBurnClaim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERCMintBurnClaim>;
    getContractAt(
      name: "ClusterArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterArea>;
    getContractAt(
      name: "ClusterAttributeArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterAttributeArea>;
    getContractAt(
      name: "ClusterAttributeAreaToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterAttributeAreaToken>;
    getContractAt(
      name: "ClusterFormulaArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterFormulaArea>;
    getContractAt(
      name: "ClusterHandlerArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterHandlerArea>;
    getContractAt(
      name: "ClusterMountingArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterMountingArea>;
    getContractAt(
      name: "ClusterRuleArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterRuleArea>;
    getContractAt(
      name: "ClusterRuleAreaHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClusterRuleAreaHandler>;
    getContractAt(
      name: "Engine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Engine>;
    getContractAt(
      name: "EngineUtil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EngineUtil>;
    getContractAt(
      name: "EngineView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EngineView>;
    getContractAt(
      name: "AreaHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AreaHandler>;
    getContractAt(
      name: "IClusterArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterArea>;
    getContractAt(
      name: "IClusterAttributeArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterAttributeArea>;
    getContractAt(
      name: "IClusterAttributeAreaToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterAttributeAreaToken>;
    getContractAt(
      name: "IClusterFormulaArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterFormulaArea>;
    getContractAt(
      name: "IClusterHandlerArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterHandlerArea>;
    getContractAt(
      name: "IClusterMountingArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterMountingArea>;
    getContractAt(
      name: "IClusterRuleArea",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterRuleArea>;
    getContractAt(
      name: "IClusterRuleAreaHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClusterRuleAreaHandler>;
    getContractAt(
      name: "IEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEngine>;
    getContractAt(
      name: "IEngineView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEngineView>;
    getContractAt(
      name: "IERCMintBurnClaimRole",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERCMintBurnClaimRole>;
    getContractAt(
      name: "IExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExchange>;
    getContractAt(
      name: "IHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHandler>;
    getContractAt(
      name: "IHandlerSync",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHandlerSync>;
    getContractAt(
      name: "IPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolToken>;
    getContractAt(
      name: "ISnippet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISnippet>;
    getContractAt(
      name: "IStateCounter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateCounter>;
    getContractAt(
      name: "IVersion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVersion>;
    getContractAt(
      name: "ProofLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProofLib>;
    getContractAt(
      name: "RelationTreeLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RelationTreeLib>;
    getContractAt(
      name: "PoolContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolContract>;
    getContractAt(
      name: "PoolFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolFee>;
    getContractAt(
      name: "PoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolToken>;
    getContractAt(
      name: "PoolTokenAllocation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolTokenAllocation>;
    getContractAt(
      name: "ProxyIntake",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyIntake>;
    getContractAt(
      name: "ProxyIntakeAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyIntakeAdmin>;
    getContractAt(
      name: "RandomHash",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RandomHash>;
    getContractAt(
      name: "RandomGenerator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RandomGenerator>;
    getContractAt(
      name: "DecodeHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecodeHelper>;
    getContractAt(
      name: "EncodeHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EncodeHelper>;
    getContractAt(
      name: "Snippet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Snippet>;
    getContractAt(
      name: "StateCounter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StateCounter>;
    getContractAt(
      name: "ISwapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapV2Factory>;
    getContractAt(
      name: "ISwapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapV2Pair>;
    getContractAt(
      name: "ISwapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapV2Router01>;
    getContractAt(
      name: "ERC1155MinterSupplyCap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MinterSupplyCap>;
    getContractAt(
      name: "ERC20FixedSupplyCap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20FixedSupplyCap>;
    getContractAt(
      name: "ERC721MinterPauserAutoIdCap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MinterPauserAutoIdCap>;
    getContractAt(
      name: "ArbSys",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ArbSys>;
    getContractAt(
      name: "Formula",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Formula>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "PausableChannelUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableChannelUpgradeable>;
    getContractAt(
      name: "TokenHandlerUtil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenHandlerUtil>;
    getContractAt(
      name: "Transfer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Transfer>;
    getContractAt(
      name: "TransferAssembly",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferAssembly>;
    getContractAt(
      name: "TransferAssemblyErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferAssemblyErrors>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
