/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ByteUtil, ByteUtilInterface } from "../ByteUtil";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "fromString",
    outputs: [
      {
        internalType: "bytes32",
        name: "result",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61017961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80639c53ac5a1461003a575b600080fd5b61004d610048366004610092565b61005f565b60405190815260200160405180910390f35b805160009082906100735750600092915050565b50506020015190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100a457600080fd5b813567ffffffffffffffff808211156100bc57600080fd5b818401915084601f8301126100d057600080fd5b8135818111156100e2576100e261007c565b604051601f8201601f19908116603f0116810190838211818310171561010a5761010a61007c565b8160405282815287602084870101111561012357600080fd5b82602086016020830137600092810160200192909252509594505050505056fea26469706673582212207e765baa0ca23ddcc5e63f76219e569c290f10f7ba5a4d5100ecd781a3f5a62d64736f6c63430008080033";

export class ByteUtil__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ByteUtil> {
    return super.deploy(overrides || {}) as Promise<ByteUtil>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ByteUtil {
    return super.attach(address) as ByteUtil;
  }
  connect(signer: Signer): ByteUtil__factory {
    return super.connect(signer) as ByteUtil__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ByteUtilInterface {
    return new utils.Interface(_abi) as ByteUtilInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ByteUtil {
    return new Contract(address, _abi, signerOrProvider) as ByteUtil;
  }
}
