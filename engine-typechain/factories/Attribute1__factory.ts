/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Attribute1, Attribute1Interface } from "../Attribute1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stateCounter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "clusterArea_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "inBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "inTokenSlotIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token",
            name: "inToken",
            type: "tuple",
          },
        ],
        internalType: "struct ISnippet.PreInputTokenParams",
        name: "preInputToken",
        type: "tuple",
      },
    ],
    name: "preInputToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrOpt",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attrType",
                type: "uint8",
              },
              {
                internalType: "int40",
                name: "attrAmount",
                type: "int40",
              },
              {
                internalType: "string",
                name: "attrText",
                type: "string",
              },
              {
                internalType: "uint32",
                name: "parentAttrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrState",
                type: "uint8",
              },
              {
                internalType: "bytes4",
                name: "attrFormula",
                type: "bytes4",
              },
            ],
            internalType: "struct Attribute.AttributeOpt[]",
            name: "attributeOptList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.TokenSnippet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "inBranch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "inRound",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
        ],
        internalType: "struct ISnippet.ExecuteDelayParams",
        name: "executeDelay",
        type: "tuple",
      },
    ],
    name: "processExecuteDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "inBranch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "inRound",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ruleDurationType",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "ruleDelayTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "ruleDelayBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "delayTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "delayBlockNumber",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token[]",
            name: "inTokenList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.InitDelayParams",
        name: "initDelay",
        type: "tuple",
      },
    ],
    name: "processInitDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "inTokenSlotIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token",
            name: "inToken",
            type: "tuple",
          },
        ],
        internalType: "struct ISnippet.InputTokenParams",
        name: "inputToken",
        type: "tuple",
      },
    ],
    name: "processInputToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrOpt",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attrType",
                type: "uint8",
              },
              {
                internalType: "int40",
                name: "attrAmount",
                type: "int40",
              },
              {
                internalType: "string",
                name: "attrText",
                type: "string",
              },
              {
                internalType: "uint32",
                name: "parentAttrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrState",
                type: "uint8",
              },
              {
                internalType: "bytes4",
                name: "attrFormula",
                type: "bytes4",
              },
            ],
            internalType: "struct Attribute.AttributeOpt[]",
            name: "attributeOptList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.TokenSnippet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "random",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "tokenSlotIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct ISnippet.TokenSlotDelayParams",
        name: "tokenSlotDelay",
        type: "tuple",
      },
    ],
    name: "processInputTokenSlotDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "random",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "outTokenSlotIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token",
            name: "outToken",
            type: "tuple",
          },
        ],
        internalType: "struct ISnippet.OutputTokenParams",
        name: "outputToken",
        type: "tuple",
      },
    ],
    name: "processOutputToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrOpt",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attrType",
                type: "uint8",
              },
              {
                internalType: "int40",
                name: "attrAmount",
                type: "int40",
              },
              {
                internalType: "string",
                name: "attrText",
                type: "string",
              },
              {
                internalType: "uint32",
                name: "parentAttrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrState",
                type: "uint8",
              },
              {
                internalType: "bytes4",
                name: "attrFormula",
                type: "bytes4",
              },
            ],
            internalType: "struct Attribute.AttributeOpt[]",
            name: "attributeOptList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.TokenSnippet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "random",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "tokenSlotIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct ISnippet.TokenSlotDelayParams",
        name: "tokenSlotDelay",
        type: "tuple",
      },
    ],
    name: "processOutputTokenSlotDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051620018d3380380620018d38339810160408190526100319161007e565b600180546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100b0565b80516001600160a01b038116811461007957600080fd5b919050565b60008060408385031215610090578182fd5b61009983610062565b91506100a760208401610062565b90509250929050565b61181380620000c06000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c806324d56ffe146100725780635de70a0d1461009b5780636557196a146100c1578063814645dc146100d45780638cb665ff146100e75780639090fa45146100fa578063b6ee96de1461010d575b600080fd5b61008561008036600461115e565b610120565b6040516100929190611466565b60405180910390f35b6100ae6100a9366004611344565b610241565b60405160039190910b8152602001610092565b6100ae6100cf366004611025565b610277565b6100ae6100e2366004611344565b6102a5565b6100856100f536600461112c565b6102d3565b61008561010836600461112c565b610332565b6100ae61011b366004610f8f565b6108af565b6101286109b8565b6101716040518060400160405280601f81526020017f2d2d2d2d2d2d2d2d2d2d2d2d2070726f636573734f7574707574546f6b656e00815250836020015163ffffffff16610908565b6001546060830151604051636c51371d60e11b815263ffffffff90911660048201526000916001600160a01b03169063d8a26e3a9060240160006040518083038186803b1580156101c157600080fd5b505afa1580156101d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101fd9190810190611225565b9050600081610140015160008151811061022757634e487b7160e01b600052603260045260246000fd5b602002602001015190506102396109b8565b949350505050565b600061026f6040518060600160405280602b8152602001611742602b9139836020015163ffffffff16610908565b506000919050565b600061026f60405180606001604052806021815260200161176d60219139836020015163ffffffff16610908565b600061026f6040518060600160405280602c81526020016117b2602c9139836020015163ffffffff16610908565b6102db6109b8565b6103246040518060400160405280601e81526020017f2d2d2d2d2d2d2d2d2d2d2d2d2070726f63657373496e707574546f6b656e0000815250836020015163ffffffff16610908565b61032c6109b8565b92915050565b61033a6109b8565b816080015163ffffffff1660011415610324576001546060830151604051636c51371d60e11b815263ffffffff90911660048201526000916001600160a01b03169063d8a26e3a9060240160006040518083038186803b15801561039d57600080fd5b505afa1580156103b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d99190810190611225565b9050600081610140015160008151811061040357634e487b7160e01b600052603260045260246000fd5b602002602001015190506104536040518060400160405280601a81526020017916969696969696969696969690383932a4b7383aba2a37b5b2b760311b815250856020015163ffffffff16610908565b60008060009054906101000a90046001600160a01b03166001600160a01b031663ef65d9f26040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a257600080fd5b505afa1580156104b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104da9190610e93565b602080870151908401516040808601519051633788a46560e21b815263ffffffff90931660048401526001600160a01b0391821660248401526044830152919091169063de2291949060640160006040518083038186803b15801561053e57600080fd5b505afa158015610552573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261057a9190810190610eb6565b90506105ba6040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b31200000815250610951565b6105f86040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b32200000815250610951565b6106366040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b33200000815250610951565b6106746040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b34200000815250610951565b6106b26040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b35200000815250610951565b6106f06040518060400160405280601d81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b36000000815250610951565b61072e6040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b37200000815250610951565b61076e6040518060400160405280601d81526020017f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d380000008152508251610908565b6107ac6040518060400160405280601d81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b39000000815250610951565b6107ea6040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b31300000815250610951565b6108286040518060400160405280601f81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b31312000815250610951565b6108666040518060400160405280601e81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b31320000815250610951565b6108a46040518060400160405280601f81526020017f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b31332000815250610951565b50505061032c6109b8565b60006108dd60405180606001604052806024815260200161178e60249139836020015163ffffffff16610908565b816040015160ff16600214806108fa5750816040015160ff166003145b1561026f57506101f4919050565b61094d828260405160240161091e929190611444565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610997565b5050565b610994816040516024016109659190611431565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610997565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060a00160405280600060ff16815260200160006001600160a01b031681526020016000815260200160008152602001606081525090565b80356109fe816116fc565b919050565b80516109fe816116fc565b600082601f830112610a1e578081fd5b81356020610a33610a2e83611693565b611663565b80838252828201915082860187848660051b8901011115610a52578586fd5b855b85811015610a925781356001600160401b03811115610a71578788fd5b610a7f8a87838c0101610d59565b8552509284019290840190600101610a54565b5090979650505050505050565b600082601f830112610aaf578081fd5b8151610abd610a2e82611693565b80828252602082019150602085018660208560051b8801011115610adf578485fd5b845b84811015610c2b5781516001600160401b0380821115610aff578788fd5b9088019060a0828b03601f19011215610b16578788fd5b610b1e61158f565b6020830151610b2c81611732565b81526040830151610b3c816116fc565b6020820152606083810151604083015260808401519082015260a083015182811115610b6657898afd5b8084019350508a603f840112610b7a578889fd5b60208301519150610b8d610a2e83611693565b80838252602082019150604085018d60408660061b8801011115610baf578b8cfd5b8b95505b84861015610c0d576040818f031215610bca578b8cfd5b610bd26115b7565b8151610bdd81611720565b81526020820151610bed81611711565b602082810191909152908452600196909601959290920191604001610bb3565b50608083015250865250506020938401939190910190600101610ae1565b50909695505050505050565b600082601f830112610c47578081fd5b81516001600160401b03811115610c6057610c606116e6565b610c73601f8201601f1916602001611663565b818152846020838601011115610c87578283fd5b6102398260208301602087016116b6565b600060c08284031215610ca9578081fd5b60405160c081016001600160401b038282108183111715610ccc57610ccc6116e6565b8160405282935084359150610ce0826116fc565b908252602084013590610cf282611720565b816020840152610d0460408601610e7d565b6040840152610d1560608601610e67565b6060840152610d2660808601610e67565b608084015260a0850135915080821115610d3f57600080fd5b50610d4c85828601610d59565b60a0830152505092915050565b600060a08284031215610d6a578081fd5b610d7261158f565b90508135610d7f81611732565b8152602082810135610d90816116fc565b82820152604083810135818401526060808501359084015260808401356001600160401b03811115610dc157600080fd5b8401601f81018613610dd257600080fd5b8035610de0610a2e82611693565b80828252858201915085840189878560061b8701011115610e0057600080fd5b60009450845b84811015610e545786828c031215610e1c578586fd5b610e246115b7565b8235610e2f81611720565b815282890135610e3e81611711565b818a015284529287019290860190600101610e06565b5050608087015250939695505050505050565b80356109fe81611720565b80516109fe81611720565b80356109fe81611732565b80516109fe81611732565b600060208284031215610ea4578081fd5b8151610eaf816116fc565b9392505050565b60006020808385031215610ec8578182fd5b82516001600160401b03811115610edd578283fd5b8301601f81018513610eed578283fd5b8051610efb610a2e82611693565b80828252848201915084840188868560071b8701011115610f1a578687fd5b8694505b83851015610f8357608080828b031215610f36578788fd5b610f3e6115d9565b8251610f4981611732565b815282880151610f58816116fc565b8189015260408381015190820152606080840151908201528452600195909501949286019201610f1e565b50979650505050505050565b600060a08284031215610fa0578081fd5b60405160a081018181106001600160401b0382111715610fc257610fc26116e6565b6040528235610fd0816116fc565b81526020830135610fe081611720565b60208201526040830135610ff381611732565b6040820152606083013561100681611732565b6060820152608083013561101981611720565b60808201529392505050565b600060208284031215611036578081fd5b81356001600160401b038082111561104c578283fd5b908301906101408286031215611060578283fd5b6110686115fb565b611071836109f3565b815261107f60208401610e67565b602082015261109060408401610e7d565b60408201526110a160608401610e7d565b60608201526110b260808401610e7d565b60808201526110c360a08401610e67565b60a08201526110d460c08401610e67565b60c08201526110e560e08401610e67565b60e08201526101006110f8818501610e67565b90820152610120838101358381111561110f578586fd5b61111b88828701610a0e565b918301919091525095945050505050565b60006020828403121561113d578081fd5b81356001600160401b03811115611152578182fd5b61023984828501610c98565b60006020828403121561116f578081fd5b81356001600160401b0380821115611185578283fd5b9083019060e08286031215611198578283fd5b6111a061161e565b6111a9836109f3565b81526111b760208401610e67565b60208201526111c860408401610e7d565b60408201526111d960608401610e67565b6060820152608083013560808201526111f460a08401610e67565b60a082015260c08301358281111561120a578485fd5b61121687828601610d59565b60c08301525095945050505050565b600060208284031215611236578081fd5b81516001600160401b038082111561124c578283fd5b908301906101808286031215611260578283fd5b611268611640565b61127183610a03565b815261127f60208401610a03565b602082015261129060408401610a03565b60408201526112a160608401610a03565b60608201526080830151608082015260a083015160a08201526112c660c08401610e72565b60c08201526112d760e08401610e72565b60e08201526101006112ea818501610e72565b908201526101206112fc848201610e88565b908201526101408381015183811115611313578586fd5b61131f88828701610a9f565b8284015250506101608084015183811115611338578586fd5b61111b88828701610c37565b6000610100808385031215611357578182fd5b604051908101906001600160401b0382118183101715611379576113796116e6565b816040528335915061138a826116fc565b81815261139960208501610e67565b60208201526113aa60408501610e7d565b60408201526113bb60608501610e67565b6060820152608084013560808201526113d660a08501610e7d565b60a08201526113e760c08501610e7d565b60c08201526113f860e085016109f3565b60e0820152949350505050565b6000815180845261141d8160208601602086016116b6565b601f01601f19169290920160200192915050565b602081526000610eaf6020830184611405565b6040815260006114576040830185611405565b90508260208301529392505050565b6000602080835260c080840160ff808751168487015283870151604060018060a01b03821681890152808901519150606082818a0152808a01519250608083818b0152808b0151935060a080818c015286855180895260e09850888d019150888160051b8e01018b880197508c5b8281101561157c578e820360df190184528851805163ffffffff1683528d8101518b168e8401528881015160ff16898401528781015160040b88840152868101516101008885018190529061152b82860182611405565b915050868201516115438886018263ffffffff169052565b508d8201516115568f86018260ff169052565b50908c01516001600160e01b031916928c0192909252978c0197928c01926001016114d4565b509e9d5050505050505050505050505050565b60405160a081016001600160401b03811182821017156115b1576115b16116e6565b60405290565b604080519081016001600160401b03811182821017156115b1576115b16116e6565b604051608081016001600160401b03811182821017156115b1576115b16116e6565b60405161014081016001600160401b03811182821017156115b1576115b16116e6565b60405160e081016001600160401b03811182821017156115b1576115b16116e6565b60405161018081016001600160401b03811182821017156115b1576115b16116e6565b604051601f8201601f191681016001600160401b038111828210171561168b5761168b6116e6565b604052919050565b60006001600160401b038211156116ac576116ac6116e6565b5060051b60200190565b60005b838110156116d15781810151838201526020016116b9565b838111156116e0576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461099457600080fd5b8060040b811461099457600080fd5b63ffffffff8116811461099457600080fd5b60ff8116811461099457600080fdfe2d2d2d2d2d2d2d2d2d2d2d2d2070726f63657373496e707574546f6b656e536c6f7444656c617954696d652d2d2d2d2d2d2d2d2d2d2d2d2070726f63657373496e697444656c617954696d652d2d2d2d2d2d2d2d2d2d2d2d2070726f636573734578656375746544656c617954696d652d2d2d2d2d2d2d2d2d2d2d2d2070726f636573734f7574707574546f6b656e536c6f7444656c617954696d65a26469706673582212209c4a7bfdedb790f7153291e2aa06ae48065a10d47a41ac1f8b123aa722c0ee4564736f6c63430008040033";

export class Attribute1__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    stateCounter_: string,
    clusterArea_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Attribute1> {
    return super.deploy(
      stateCounter_,
      clusterArea_,
      overrides || {}
    ) as Promise<Attribute1>;
  }
  getDeployTransaction(
    stateCounter_: string,
    clusterArea_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      stateCounter_,
      clusterArea_,
      overrides || {}
    );
  }
  attach(address: string): Attribute1 {
    return super.attach(address) as Attribute1;
  }
  connect(signer: Signer): Attribute1__factory {
    return super.connect(signer) as Attribute1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Attribute1Interface {
    return new utils.Interface(_abi) as Attribute1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Attribute1 {
    return new Contract(address, _abi, signerOrProvider) as Attribute1;
  }
}
